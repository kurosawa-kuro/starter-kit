services:
  # PostgreSQL データベース
  postgres:
    image: postgres:15-alpine
    container_name: hello-world-postgres
    environment:
      POSTGRES_DB: sampledb
      POSTGRES_USER: sampleuser
      POSTGRES_PASSWORD: samplepass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - hello-world-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sampleuser -d sampledb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # アプリケーション
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hello-world-api
    environment:
      NODE_ENV: production
      PORT: 8080
      HOST: 0.0.0.0
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: sampleuser
      DB_PASSWORD: samplepass
      DB_NAME: sampledb
      DB_SSL: false
      MOCK_MODE: false
      RATE_LIMIT_ENABLED: true
      RATE_LIMIT_MAX: 100
      RATE_LIMIT_WINDOW_MS: 900000
      LOG_LEVEL: info
      LOG_FORMAT: json
      CORS_ORIGIN: "*"
      CORS_CREDENTIALS: false
      CORS_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      CORS_HEADERS: "Content-Type,Authorization"
      HELMET_ENABLED: true
      TRUST_PROXY: false
      REQUEST_SIZE_LIMIT: "10mb"
      API_PREFIX: "/api"
      API_VERSION: "v1"
      HEALTH_CHECK_PATH: "/api/health"
      HEALTH_CHECK_TIMEOUT: 5000
      SWAGGER_ENABLED: true
      SWAGGER_PATH: "/api-docs"
      SWAGGER_TITLE: "Hello World API"
      SWAGGER_VERSION: "1.0.0"
      JWT_SECRET: "your_jwt_secret_key_here"
      JWT_EXPIRES_IN: "24h"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hello-world-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 開発用サービス（オプション）
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hello-world-api-dev
    environment:
      NODE_ENV: development
      PORT: 8081
      HOST: 0.0.0.0
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: sampleuser
      DB_PASSWORD: samplepass
      DB_NAME: sampledb
      DB_SSL: false
      MOCK_MODE: false
      RATE_LIMIT_ENABLED: true
      RATE_LIMIT_MAX: 1000
      RATE_LIMIT_WINDOW_MS: 900000
      LOG_LEVEL: debug
      LOG_FORMAT: json
      CORS_ORIGIN: "*"
      CORS_CREDENTIALS: false
      CORS_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      CORS_HEADERS: "Content-Type,Authorization"
      HELMET_ENABLED: true
      TRUST_PROXY: false
      REQUEST_SIZE_LIMIT: "10mb"
      API_PREFIX: "/api"
      API_VERSION: "v1"
      HEALTH_CHECK_PATH: "/api/health"
      HEALTH_CHECK_TIMEOUT: 5000
      SWAGGER_ENABLED: true
      SWAGGER_PATH: "/api-docs"
      SWAGGER_TITLE: "Hello World API (Development)"
      SWAGGER_VERSION: "1.0.0"
      JWT_SECRET: "dev_jwt_secret_key_here"
      JWT_EXPIRES_IN: "24h"
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hello-world-network
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
    driver: local

networks:
  hello-world-network:
    driver: bridge 